name: CI

on:
  push:
    branches:
      - master
    tags:
      - "v*"
  pull_request:

jobs:
  test-go:
    name: "Test (Go)"
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: cli
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-go@v2
        with:
          go-version: 1.14
      - uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Configure AWS Credentials
        if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/v')
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Setup GCP credentials
        if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/v')
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: "290.0.1"
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true
      - name: "Build"
        run: make build-all
      - name: "Validate"
        run: make validate
      - name: Test
        if: github.event_name == 'pull_request'
        run: make test
      - name: Test (external)
        if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/v')
        run: make test-external

  test-python:
    name: "Test (Python)"
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: python
    strategy:
      fail-fast: false
      matrix:
        python: [3.6, 3.7, 3.8]
    steps:
      - uses: actions/checkout@master
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements-test.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Configure AWS Credentials
        if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/v')
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Setup GCP credentials
        if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/v')
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: "290.0.1"
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true
      - name: Install
        run: |
          (cd ../ && make install-test-dependencies)
          (cd ../ && make build)
          pip install $(echo dist/replicate-*-py3-none-manylinux1_x86_64.whl)
      - name: Test
        if: github.event_name == 'pull_request'
        run: make test
      - name: Test (external)
        if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/v')
        run: make test-external

  test-end-to-end:
    name: "Test (end to end)"
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: end-to-end-test
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-go@v2
        with:
          go-version: 1.14
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements-test.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Configure AWS Credentials
        if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/v')
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Setup GCP credentials
        if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/v')
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: "290.0.1"
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true
      - name: Write private key
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > /tmp/private_key.pem
          chmod 400 /tmp/private_key.pem
      - name: Install
        run: |
          (cd ../ && make install-test-dependencies)
          (cd ../ && make build)
          pip install $(echo ../python/dist/replicate-*-py3-none-manylinux1_x86_64.whl)
      - name: Test
        if: github.event_name == 'pull_request'
        run: make test
      - name: Test (external)
        if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/v')
        run: make test-external

  release:
    needs: [test-go, test-python, test-end-to-end]
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-go@v2
        with:
          go-version: 1.14
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Setup GCP credentials
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: "290.0.1"
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true
      - name: Build
        run: make build ENVIRONMENT=production
      - name: Push Python package
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.PYPI_PASSWORD }}
          packages_dir: python/dist
